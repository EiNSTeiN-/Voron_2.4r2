# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu EBBCan_t1]
canbus_uuid: c7ea93d258d4

[temperature_sensor EBB_NTC_t1]
sensor_type: Generic 3950
sensor_pin: EBBCan_t1: PA2

[adxl345 t1]
cs_pin: EBBCan_t1: PB12
spi_software_sclk_pin: EBBCan_t1: PB10
spi_software_mosi_pin: EBBCan_t1: PB11
spi_software_miso_pin: EBBCan_t1: PB2
axes_map: z,-y,x

[extruder1]
step_pin: EBBCan_t1: PD0
dir_pin: EBBCan_t1: PD1
enable_pin: !EBBCan_t1: PD2
microsteps: 32
gear_ratio: 50:10
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 33.500
#rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
rotation_distance: 21.771793056
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan_t1: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan_t1: PA3
control: pid
pid_Kp: 27.813
pid_Ki: 1.315
pid_Kd: 147.063
min_temp: 10
max_temp: 350
max_power: 1.0
min_extrude_temp: 170
max_extrude_cross_section: 3

# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2240 extruder1]
cs_pin: EBBCan_t1: PA15
spi_software_sclk_pin: EBBCan_t1: PB10
spi_software_mosi_pin: EBBCan_t1: PB11
spi_software_miso_pin: EBBCan_t1: PB2
driver_TPFD: 0
run_current: 0.650
stealthchop_threshold: 0

[fan_generic parts_cooling_fan_t1]
pin: EBBCan_t1: PA1

[heater_fan hotend_fan_t1]
pin: EBBCan_t1: PA0
heater: extruder1
heater_temp: 50.0

#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

[neopixel hotend_leds_t1]
#   The pin connected to the neopixel. This parameter must be provided.
pin: EBBCan_t1:PD3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
chain_count: 3
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
color_order: GRB # formbot kit LEDs
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 1.0
initial_WHITE: 0.0

[tool_probe t1]
pin: ^EBBCan_t1:PB5
# set tool this probe belongs to, must match [tool N] entry
tool: 1
z_offset: -1.65
speed: 10.0
lift_speed: 100.0
samples: 1
samples_result: median
sample_retract_dist: 2.0
samples_tolerance: 0.01
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder1.temperature %}
    {% set TARGET_TEMP = printer.extruder1.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 T1 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder1 MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[tool 1]
tool_group: 0
extruder: extruder1
fan: parts_cooling_fan_t1
# Pickup position: aligned XY, Z- the carriage 1 mm below the bottom of the rail
#park: 6.2, -6.8, 260
# X+84 (dock width)
park: 90.2, 3.5, 260
# X unused, Y = safe distance from dock, Z unused
zone: 0, 100, 0
# Offset relative to other tools. Tool 0 generally should have 0 offset, but not required.
offset: 0,0,0
meltzonelength: 18

[gcode_macro T1]
variable_pressure_advance_table: {
  }
gcode:
  KTCC_T1

  # set pressure advance from table, the macro will filter and set only the appropriate one
  {% set tool = printer.tool_probe_endstop.active_tool_number %}
  {% for nozzle_diameter in pressure_advance_table %}
    SET_EXTRUDER_PA TOOL={ tool } NOZZLE={ nozzle_diameter } ADVANCE={ pressure_advance_table[nozzle_diameter] }
  {% endfor %}
