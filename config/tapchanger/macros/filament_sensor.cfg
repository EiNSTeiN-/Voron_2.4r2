[delayed_gcode _DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
  {% for n in range(4) %}
    {% if printer['tool ' + n|string] %}
      SET_FILAMENT_SENSOR SENSOR=filament_sensor_t{n} ENABLE=0
    {% endif %}
  {% endfor %}

[gcode_macro _PAUSE_UNLESS_FILAMENT_DETECTED]
gcode:
  {% set tool = params.TOOL|default("0")|int %}
  {% set filament_detected = printer["filament_motion_sensor filament_sensor_t" + tool|string].filament_detected %}

  {% if not filament_detected %}
    RESPOND TYPE=error MSG='T{tool} runout detected (filament_detected={ filament_detected }), pausing...'
    PAUSE

    SET_GCODE_VARIABLE MACRO=_FILAMENT_INSERT VARIABLE=active_tool VALUE={tool}
    {% set extruder = printer['tool ' + tool|string].extruder %}
    SET_GCODE_VARIABLE MACRO=_FILAMENT_INSERT VARIABLE=active_temp VALUE={printer[extruder].target}

    # Stop all tool heaters
    {% for n in range(4) %}
      {% if printer['tool ' + n|string] %}
        RESPOND TYPE=command MSG='Setting T{n} temp to 0'
        M568 P{n} A0
      {% endif %}
    {% endfor %}

    STATUS_READY
  {% endif %}

[gcode_macro _RESUME_IF_FILAMENT_DETECTED]
gcode:
  {% set tool = params.TOOL|default("0")|int %}
  {% set filament_detected = printer["filament_motion_sensor filament_sensor_t" + tool|string].filament_detected %}

  {% if printer.pause_resume.is_paused and filament_detected %}
    RESPOND TYPE=error MSG='T{tool} runout restored(filament_detected={ filament_detected }), resuming...'

    STATUS_HEATING
    _HEATUP_AFTER_RUNOUT TOOL={ tool }

    RESUME

    STATUS_PRINTING
  {% endif %}

[gcode_macro _FILAMENT_RUNOUT]
gcode:
  {% set tool = params.TOOL|default("0")|int %}

  # finish current moves
  M400

  # pause but only if filament is still not detected after finishing current moves
  _PAUSE_UNLESS_FILAMENT_DETECTED TOOL={ tool }

  # wait 5 sec for everything to catch up...
  G4 P5000

  # resume right away if filament is actually inserted
  _RESUME_IF_FILAMENT_DETECTED TOOL={ tool }

[gcode_macro _HEATUP_AFTER_RUNOUT]
gcode:
  {% set tool = params.TOOL|default("0")|int %}
  RESPOND TYPE=command MSG='T{tool} insertion detected'

  {% if printer.pause_resume.is_paused %}
    {% for n in range(4) %}
      {% if printer['tool ' + n|string] and n != tool %}
        RESPOND TYPE=command MSG='Setting T{n} to active'
        M568 P{n} A1
      {% endif %}
    {% endfor %}

    # Wait for active tool to reach its temperature
    RESPOND TYPE=command MSG='Waiting for T{tool} to heat up to { active_temp }...'
    M568 P{ tool } A2
    M109 S{ active_temp } T{ tool }
  {% endif %}

[gcode_macro _FILAMENT_INSERT]
variable_active_tool: -1
variable_active_temp: 0
gcode:
  {% set tool = params.TOOL|default("0")|int %}
  RESPOND TYPE=command MSG='T{tool} insertion detected'

  {% if printer.pause_resume.is_paused %}
    STATUS_HEATING
    _HEATUP_AFTER_RUNOUT TOOL={ tool }

    # Purge and wipe before resuming
    STATUS_CLEANING
    RESPOND TYPE=command MSG='Purging and wiping T{tool}...'
    MOVE_TO_PURGE_BUCKET
    PURGE_IN_BUCKET MOVE=1 E=15 I=2
    WIPE_NOZZLE MOVE=1

    STATUS_PRINTING
    RESPOND TYPE=command MSG='Ready to resume...'
  {% endif %}
